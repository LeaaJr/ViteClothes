/* GridGen.module.css */

* {
    box-sizing: border-box;
}

.wrapper {
    max-width: 940px;
    height: 600px; /* altura total fija para desktop */
    margin: 0 auto;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(5, 1fr);
    gap: 10px;
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    padding: 0;
}

/* Estilo común para cada celda dentro del grid */
.wrapper > a {
    background-color: rgb(233, 171, 88 / 50%);
    padding: 1px;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    text-decoration: none;
    color: inherit;
    /* transition: filter 0.3s ease; */ /* Removed here, handled by .gridItemAnimated */
}

/* Specific grid placements for desktop */
.one {
    grid-column: 1 / 2;
    grid-row: 1 / 6;
    filter: brightness(0.5);
    cursor: pointer;
}

.two {
    grid-column: 2 / 3;
    grid-row: 1 / 4;
    filter: brightness(0.5);
    cursor: pointer;
}

.four {
    grid-column: 3 / 4;
    grid-row: 1 / 4;
    filter: brightness(0.5);
    cursor: pointer;
}

.five {
    grid-column: 2 / 4;
    grid-row: 4 / 6;
    filter: brightness(0.5);
    cursor: pointer;
}

/* Estilo de las imágenes */
.image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
}

.one:hover,
.two:hover,
.four:hover,
.five:hover {
    filter: brightness(0.8);
}

.overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.3);
    z-index: 1;
    transition: background-color 0.3s ease;
}

.wrapper > a:hover .overlay {
    background-color: rgba(0, 0, 0, 0.1);
}

.hachetres {
    position: absolute;
    z-index: 2;
    color: white;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: transparent;
    font-size: 1.5rem;
    text-align: center;
    white-space: nowrap;
    transition: font-size 0.3s ease;
}


/* --- MOBILE SPECIFIC STYLES & ANIMATIONS --- */

@media (max-width: 768px) {
    .wrapper {
        height: auto;
        grid-template-columns: 1fr;
        grid-template-rows: auto;
        gap: 15px;
        padding: 10px;
        max-width: 100%;
        box-shadow: none;
    }

    /* Reset grid-column and grid-row for all items on mobile */
    .one, .two, .four, .five {
        grid-column: 1 / -1;
        grid-row: auto;
        height: 250px;
        filter: brightness(0.7);
    }

    .hachetres {
        font-size: 1.8rem;
        white-space: normal;
        padding: 0 10px;
    }

    .image {
        object-position: center;
    }

    /* --- ANIMATION CLASSES FOR MOBILE --- */
    .gridItemAnimated {
        /* Initial state for items outside the viewport */
        opacity: 0;
        transition: opacity 0.6s ease-out, transform 0.6s ease-out, filter 0.3s ease; /* Smooth transitions */
        /* Default transform for scroll-down (entering from bottom/sides) */
        transform: translateY(50px) scale(0.9); /* Start slightly below and smaller */
    }

    .gridItemAnimated.hidden.scrollUp {
        /* If scrolling up and hidden, move it down (exit downwards) */
        transform: translateY(50px) scale(0.9);
        opacity: 0;
    }

    .gridItemAnimated.hidden.scrollDown {
        /* If scrolling down and hidden, move it up (exit upwards) */
        transform: translateY(-50px) scale(0.9); /* Start above for exiting upwards */
        opacity: 0;
    }


    .gridItemAnimated.visible {
        /* Final state when item is visible in viewport */
        opacity: 1;
        transform: translateY(0) scale(1); /* Move to original position, full size */
    }

    /* Optional: Specific entrance from side for a more "flow-in" effect for some items */
    /* Example: Left and Right items could come from respective sides */
    .one.gridItemAnimated.hidden.scrollDown {
        transform: translateX(-100px); /* Come from left when scrolling down */
    }
    .one.gridItemAnimated.visible {
        transform: translateX(0);
    }

    .four.gridItemAnimated.hidden.scrollDown {
        transform: translateX(100px); /* Come from right when scrolling down */
    }
    .four.gridItemAnimated.visible {
        transform: translateX(0);
    }

    /* Reverse effect for scrollUp (exiting) */
    .one.gridItemAnimated.hidden.scrollUp {
        transform: translateX(0); /* For exiting, you want it to move away, not reset */
        opacity: 0;
    }

    /* Fine-tune scroll up (exiting) animations based on direction */
    .gridItemAnimated.hidden.scrollUp {
        /* When scrolling UP and item becomes hidden (i.e., it moved *above* the viewport),
           it should move *down* and fade out. */
        opacity: 0;
        transform: translateY(50px) scale(0.9); /* Move downwards as it leaves the top */
    }

    .gridItemAnimated.hidden.scrollDown {
        /* When scrolling DOWN and item becomes hidden (i.e., it moved *below* the viewport),
           it should move *up* and fade out. */
        opacity: 0;
        transform: translateY(-50px) scale(0.9); /* Move upwards as it leaves the bottom */
    }

    /* When an item *becomes* visible: */
    /* If scrolling down, it comes from the bottom */
    .gridItemAnimated.visible.scrollDown {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
    /* If scrolling up, it comes from the top (or re-enters from top) */
    .gridItemAnimated.visible.scrollUp {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}


@media (max-width: 480px) {
    .wrapper {
        gap: 10px;
    }
    .one, .two, .four, .five {
        height: 200px;
    }
    .hachetres {
        font-size: 1.5rem;
    }
}

@media (max-width: 374px) {
    .one, .two, .four, .five {
        height: 180px;
    }
    .hachetres {
        font-size: 1.3rem;
    }
}

@media (max-width: 320px) {
    .one, .two, .four, .five {
        height: 150px;
    }
    .hachetres {
        font-size: 1.1rem;
    }
}